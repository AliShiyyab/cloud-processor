"""init

Revision ID: b170fe3b3b9b
Revises: 2e08c2e9a1f7
Create Date: 2025-05-18 19:32:58.138540

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b170fe3b3b9b'
down_revision: Union[str, None] = '2e08c2e9a1f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cloud_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('resource_type', sa.Enum('VM', 'STORAGE', 'SERVICE', name='resourcetype'), nullable=False),
    sa.Column('status', sa.Enum('running', 'stopped', 'provisioning', 'available', 'in_progress', 'detected', 'mitigating', 'mitigated', name='statusenum'), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('under_attack', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cloud_resources_id'), 'cloud_resources', ['id'], unique=False)
    op.create_table('attacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('attack_type', sa.Enum('format_string', 'off_by_one', 'heap_overflow', 'stack_overflow', name='attacktype'), nullable=False),
    sa.Column('status', sa.Enum('running', 'stopped', 'provisioning', 'available', 'in_progress', 'detected', 'mitigating', 'mitigated', name='statusenum'), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['cloud_resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attacks_id'), 'attacks', ['id'], unique=False)
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('process', sa.String(), nullable=True),
    sa.Column('pid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['cloud_resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logs_id'), 'logs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_logs_id'), table_name='logs')
    op.drop_table('logs')
    op.drop_index(op.f('ix_attacks_id'), table_name='attacks')
    op.drop_table('attacks')
    op.drop_index(op.f('ix_cloud_resources_id'), table_name='cloud_resources')
    op.drop_table('cloud_resources')
    # ### end Alembic commands ###
